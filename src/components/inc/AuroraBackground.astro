---
import { cn } from "@/utils";

interface Props {
  class?: string;
  showRadialGradient?: boolean;
}
const { class: className, showRadialGradient } = Astro.props;
---

<div
  class={cn(
    "relative flex flex-col items-center justify-center bg-[#010225]  text-slate-950 transition-bg",
    className,
  )}
>
  <div class="absolute inset-0 overflow-hidden -z-[1] h-[60vh] opacity-50">
    <div
      class={cn(
        `   aurora
            [background-image:var(--dark-gradient),var(--aurora)]
            [background-size:300%,_200%]
            [background-position:50%_50%,50%_50%]
            filter blur-[10px]
            after:content-[""] after:absolute after:inset-0
            after:[background-image:var(--dark-gradient),var(--aurora)]
            after:[background-size:200%,_100%] 
            after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference
            pointer-events-none
            absolute -inset-[10px] opacity-50 will-change-transform`,

        showRadialGradient &&
          `[mask-image:radial-gradient(ellipse_at_100%_0%,black_40%,var(--transparent)_70%)]`,
      )}
    >
    </div>
  </div>
  <slot />
</div>

<style>
  .aurora {
    --dark-gradient: repeating-linear-gradient(
      100deg,
      var(--black) 0%,
      var(--black) 7%,
      var(--transparent) 10%,
      var(--transparent) 12%,
      var(--black) 16%
    );
    --aurora: repeating-linear-gradient(
      100deg,
      #60a5fa 10%,
      #e879f9 16%,
      #5eead4 22%,
      #60a5fa 30%
    );
    contain: strict;
    contain-intrinsic-size: 100vw 40vh;
    -webkit-transform: translateZ(0);
    -webkit-perspective: 1000;
    -webkit-backface-visibility: hidden;
    height: inherit;
  }
</style>
